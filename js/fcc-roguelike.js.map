{"version":3,"sources":["../src/fcc-roguelike.js"],"names":["viewMask","cellStates","viewSide","world","width","height","walls","enemies","player","x","y","composite","getLocationValue","generateNew","w","push","h","buildComposite","map","i","p","playerClick","move","xOffset","yOffset","Math","floor","buildView","stepGame","buidView","moveQueue","view","value","index","window","updateViewState","Driver","React","createClass","getInitialState","directions","measureNode","undefined","size","viewState","__getNode","node","setState","__setSize","componentWillMount","newState","componentDidMount","addEventListener","__resizeWithTimeout","componentWillUnmount","removeEventListener","newSize","state","offsetWidth","offsetHeight","__resizeTimeout","clearTimeout","setTimeout","__cellClick","render","bind","Directions","props","onClick","Cell","contains","onload","ReactDOM","createElement","document","getElementById"],"mappings":"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","file":"fcc-roguelike.js","sourcesContent":["const viewMask = [\r\n    0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\r\n    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\r\n    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\r\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\r\n    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\r\n    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n    0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 ];\r\n\r\nconst cellStates = [\r\n    \"hidden\",   //0\r\n    \"empty\",    //1\r\n    \"player\",   //2\r\n    \"wall\",     //3\r\n    \"enemy\"     //4\r\n];\r\n//game may break if set to an even number, mask needs to be manualy updated upon a change\r\nconst viewSide = 15;\r\n//the world does not use the \"hidden\" value\r\nvar world = {\r\n    width: 49,\r\n    height: 99,\r\n    //array of columb arrays for x/y indexing\r\n    walls: [],\r\n    enemies: [],\r\n    player: { x: 0, y: 0},\r\n    composite: [],\r\n    getLocationValue: function(x, y) {\r\n        if (x < 0 || x > this.width || y < 0 || y > this.height) {\r\n            return 3;\r\n        }\r\n        return this.composite[x][y];\r\n    },\r\n    generateNew: function(){\r\n        //TESTING CODE\r\n        this.walls = [];\r\n        for (var w = 0; w < this.width + 1; w++){\r\n            this.walls.push([]);\r\n            for (let h = 0; h < this.height + 1; h++){\r\n                this.walls[w].push(1);\r\n            }\r\n        }\r\n        this.buildComposite();\r\n    },\r\n    buildComposite: function(){\r\n        //this clones map (breaks references to map in composite);\r\n        this.composite = this.walls.map((i)=>(\r\n                i.map( (p)=>(p) )\r\n            ));\r\n        this.composite[this.player.x][this.player.y] = 2;\r\n    }\r\n};\r\nfunction playerClick(move) {\r\n    let xOffset = (move % viewSide - (viewSide - 1) / 2);\r\n    let yOffset = (Math.floor(move / viewSide) - ((viewSide - 1) / 2)) * -1;\r\n\r\n    //TESTING CODE\r\n    world.player.x += xOffset;\r\n    world.player.y += yOffset;\r\n\r\n    //moveQueue will be genorated here\r\n    buildView();\r\n};\r\nfunction stepGame(){\r\n    //execute a move in the queue\r\n    //if no more moves are left delete interval\r\n    buidView();\r\n};\r\nvar moveQueue = [];\r\n//width and height and NOT zero indexed\r\n\r\nfunction buildView() {\r\n    world.buildComposite();\r\n    var view = [];\r\n    for (let y = (viewSide - 1)/2; y >= (viewSide - 1)/2 * -1; y--){\r\n        for (let x = (viewSide - 1)/2 * -1; x <= (viewSide - 1)/2; x++){\r\n            view.push(world.getLocationValue(x + world.player.x, y + world.player.y));\r\n        }\r\n    }\r\n    view = view.map((value, index) => (\r\n        value * viewMask[index]\r\n    ));\r\n    window.updateViewState(view);\r\n};\r\n\r\nvar Driver = React.createClass({\r\n    getInitialState: function(){\r\n        return {\r\n            directions: true,\r\n            measureNode: undefined,\r\n            size: [\"100px\", \"100px\"],\r\n            viewState: window.viewMask };\r\n    },\r\n    __getNode: function(node){\r\n        this.setState({measureNode: node}, this.__setSize);\r\n    },\r\n    componentWillMount: function(){\r\n        window.updateViewState = (newState) => {\r\n            this.setState({viewState: newState});\r\n        };\r\n    },\r\n    componentDidMount: function(){\r\n        window.addEventListener(\"resize\", this.__resizeWithTimeout);\r\n        window.buildView();\r\n    },\r\n    componentWillUnmount: function() {\r\n        window.removeEventListener(\"resize\", this.__resizeWithTimeout);\r\n    },\r\n    __setSize: function(){\r\n        var newSize;\r\n        if (this.state.measureNode.offsetWidth > this.state.measureNode.offsetHeight){\r\n            newSize = [this.state.measureNode.offsetHeight + \"px\", this.state.measureNode.offsetHeight + \"px\" ];\r\n        } else {\r\n            newSize = [this.state.measureNode.offsetWidth + \"px\", this.state.measureNode.offsetWidth + \"px\" ];\r\n        }\r\n        this.setState({size: newSize});\r\n    },\r\n    //is this the right way to do this? i don't want the component to re-render a bazillion times when i resize the window...\r\n    __resizeTimeout: undefined,\r\n    __resizeWithTimeout: function(){\r\n        window.clearTimeout(this.__resizeTimeout);\r\n        this.__resizeTimeout = window.setTimeout(this.__setSize, 200);\r\n    },\r\n    __cellClick: function(index){\r\n        window.playerClick(index);\r\n    },\r\n    render: function(){\r\n        return <div ref={this.__getNode}>\r\n            {this.state.directions\r\n                ? <Directions onClick={\r\n                    function(){this.setState({directions:false});}.bind(this)\r\n                    }/>: \"\"}\r\n            <div\r\n                id=\"game-display\"\r\n                style={{width: this.state.size[0], height: this.state.size[1]}} >\r\n                {this.state.viewState.map( (value, index) => (\r\n                    <Cell\r\n                        contains={value}\r\n                        key={index}\r\n                        onClick={this.__cellClick.bind(this, index)} />\r\n                    ))}\r\n            </div>\r\n        </div>;\r\n    }\r\n});\r\n\r\nconst Directions = props => (\r\n    <div id=\"directions\" onClick={props.onClick} >\r\n        <div>\r\n            <h1>React Roguelike</h1>\r\n            <ul>\r\n                <li>Select an empty tile to move</li>\r\n                <li>Select an enemy to attack</li>\r\n                <li>Defeat the dungeon boss to win</li>\r\n            </ul>\r\n            <div>click to start</div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst Cell = props => (\r\n    <div\r\n        className={\"cell \" + cellStates[props.contains]}\r\n        onClick={props.onClick}\r\n        ></div>\r\n);\r\n\r\nwindow.onload = function() {\r\n    world.generateNew();\r\n    ReactDOM.render(React.createElement(\r\n        Driver, null),\r\n        document.getElementById(\"container\") );\r\n};"]}